{"version":3,"sources":["2a-Learning_TandemLogo_BrashBurgandy.png","Components/Header.js","Context/ProjectContext.js","Components/Drawing Tools/ShapeTool.js","Components/Drawing Tools/PatternTool.js","Components/ColorPicker.js","Components/Drawing Tools/PatternColorTool.js","Components/Drawing Tools/SpacingTool.js","Components/Drawing Tools/SizeTool.js","Components/DrawingTools.js","Components/Canvas.js","Components/CanvasContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","src","logo","alt","ProjectContext","createContext","useProjectContext","useContext","reducer","state","action","type","shapeType","payload","drawShape","patternType","drawPattern","patternColor","spacingValue","sizeValue","backgroundColor","ProjectProvider","children","squareShape","event","project","activeLayer","clear","x1","downPoint","x","y1","y","x2","point","y2","w","projectState","size","j","lines","Group","rectangle","Rectangle","Point","Path","fillColor","i","Circle","patternShape","Line","strokeColor","strokeWidth","addChild","box","clipped","circleShape","h","point1","point2","r","getDistance","group","Math","sqrt","pow","patternShape2","rotate","triangleShape","segments","closed","circlePattern","squarePattern","slashPattern","l","crossPattern","patternShapeUp","patternShapeDown","value","useReducer","projectDispatch","useEffect","Provider","ShapeTool","isShapeSelected","shape","onClick","class","width","height","viewBox","fill","xmlns","stroke","stroke-width","cx","cy","d","PatternTool","isPatternSelected","pattern","rx","id","mask-type","maskUnits","mask","ColorPicker","colorPickerType","isPatternColorSelected","color","classNames","title","PatternColorTool","useStyles","makeStyles","root","input","fontFamily","background","border","borderRadius","paddingLeft","marks","SpacingSlider","withStyles","padding","thumb","marginTop","marginLeft","boxShadow","active","valueLabel","left","top","track","rail","opacity","mark","markActive","Slider","SpacingTool","classes","dispatchValue","newValue","Grid","container","spacing","alignItems","item","xs","onChange","aria-labelledby","step","min","max","Input","margin","abs","target","inputProps","SizeSlider","SizeTool","DrawingTools","tool","Tool","Canvas","props","React","onMouseDrag","onMouseDown","paper","Layer","insertBelow","data-paper-resize","CanvasContainer","useState","open","setOpen","Paper","setup","remove","style","fileName","url","encodeURIComponent","exportSVG","asString","bounds","link","document","createElement","download","click","handleExportSVG","position","zIndex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8b0e133d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/2a-Learning_TandemLogo_BrashBurgandy.115477de.png\";","import React from \"react\";\nimport logo from \"../2a-Learning_TandemLogo_BrashBurgandy.png\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <a href=\"https://madeintandem.com/\">\n        <img src={logo} alt=\"Tandem Logo\" className=\"logo\" />\n      </a>\n      <h1 className=\"title\">Create a tandem pattern</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import { useContext, createContext, useReducer, useEffect } from \"react\";\nimport {\n  paper,\n  Path,\n  Point,\n  Rectangle,\n  Circle,\n  project,\n  Group,\n  activeLayer,\n} from \"paper\";\nimport { Layer, projects } from \"paper/dist/paper-core\";\nconst ProjectContext = createContext();\n\nexport function useProjectContext() {\n  return useContext(ProjectContext);\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_SHAPE_TYPE\":\n      return {\n        ...state,\n        shapeType: action.payload,\n      };\n    case \"SET_DRAW_SHAPE\":\n      return {\n        ...state,\n        drawShape: action.payload,\n      };\n    case \"SET_PATTERN_TYPE\":\n      return {\n        ...state,\n        patternType: action.payload,\n      };\n    case \"SET_DRAW_PATTERN\":\n      return {\n        ...state,\n        drawPattern: action.payload,\n      };\n    case \"SET_PATTERN_COLOR\":\n      return {\n        ...state,\n        patternColor: action.payload,\n      };\n    case \"SET_SPACING_VALUE\":\n      return {\n        ...state,\n        spacingValue: action.payload,\n      };\n    case \"SET_SIZE_VALUE\":\n      return {\n        ...state,\n        sizeValue: action.payload,\n      };\n    case \"SET_BACKGROUND_COLOR\":\n      return {\n        ...state,\n        backgroundColor: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport function ProjectProvider({ children }) {\n  const squareShape = (event) => {\n    project.activeLayer.clear();\n\n    // Sets beginning and end points, and pattern spacing\n    var x1 = event.downPoint.x;\n    var y1 = event.downPoint.y;\n    var x2 = event.point.x;\n    var y2 = event.point.y;\n    var w = projectState.spacingValue;\n    var size = projectState.sizeValue;\n    var i;\n    var j = 32;\n    var lines = new Group();\n\n    // Draws diagonal lines\n    if (projectState.patternType === \"diagonal-lines\") {\n      if (x2 < x1 && y2 < y1) {\n        for (\n          var x = x1, y = y1;\n          x > -10000, y > -10000;\n          x -= w / 2, y -= w / 2\n        ) {\n          var patternShape = new Path.Line(new Point(x1, y), new Point(x, y1));\n          patternShape.strokeColor = projectState.patternColor;\n          patternShape.strokeWidth = size / 3;\n          lines.addChild(patternShape);\n        }\n      }\n\n      if (x2 > x1 && y2 < y1) {\n        for (\n          var x = x1, y = y1;\n          x <= 10000, y > -10000;\n          x += w / 2, y -= w / 2\n        ) {\n          var patternShape = new Path.Line(new Point(x1, y), new Point(x, y1));\n          patternShape.strokeColor = projectState.patternColor;\n          patternShape.strokeWidth = size / 3;\n          lines.addChild(patternShape);\n        }\n      }\n\n      if (x2 < x1 && y2 > y1) {\n        for (\n          var x = x1, y = y1;\n          x <= 10000, y <= 10000;\n          x -= w / 2, y += w / 2\n        ) {\n          var patternShape = new Path.Line(new Point(x1, y), new Point(x, y1));\n          patternShape.strokeColor = projectState.patternColor;\n          patternShape.strokeWidth = size / 3;\n          lines.addChild(patternShape);\n        }\n      }\n\n      if (x2 > x1 && y2 > y1) {\n        for (\n          var x = x1, y = y1;\n          x <= 10000, y <= 10000;\n          x += w / 2, y += w / 2\n        ) {\n          var patternShape = new Path.Line(new Point(x1, y), new Point(x, y1));\n          patternShape.strokeColor = projectState.patternColor;\n          patternShape.strokeWidth = size / 3;\n          lines.addChild(patternShape);\n        }\n      }\n      var box = new Path.Rectangle(new Point(x1, y1), new Point(x2, y2));\n\n      var mask = new Group(box, lines);\n      mask.clipped = true;\n\n      return;\n    }\n\n    // Draws halftone\n    if (projectState.patternType === \"halftone-circles\") {\n      if (x2 < x1 && y2 < y1) {\n        for (var y = y1, i = j; y >= y2; y -= w / 2, i--) {\n          for (var x = x1; x >= x2; x -= w / 2) {\n            new Path.Circle(new Point(x, y), (w * (i / j)) / 4).fillColor =\n              projectState.patternColor;\n          }\n        }\n      }\n      if (x2 > x1 && y2 < y1) {\n        for (var y = y1, i = j; y >= y2; y -= w / 2, i--) {\n          for (var x = x1; x <= x2; x += w / 2) {\n            new Path.Circle(new Point(x, y), (w * (i / j)) / 4).fillColor =\n              projectState.patternColor;\n          }\n        }\n      }\n      if (x2 < x1 && y2 > y1) {\n        for (var y = y1, i = j; y <= y2; y += w / 2, i--) {\n          for (var x = x1; x >= x2; x -= w / 2) {\n            new Path.Circle(new Point(x, y), (w * (i / j)) / 4).fillColor =\n              projectState.patternColor;\n          }\n        }\n      }\n      if (x2 > x1 && y2 > y1) {\n        for (var y = y1, i = j; y <= y2; y += w / 2, i--) {\n          for (var x = x1; x <= x2; x += w / 2) {\n            new Path.Circle(new Point(x, y), (w * (i / j)) / 4).fillColor =\n              projectState.patternColor;\n          }\n        }\n      }\n      return;\n    }\n\n    // Draws solid shape\n    if (projectState.patternType === \"solid\") {\n      var rectangle = new Rectangle(new Point(x1, y1), new Point(x2, y2));\n      var path = new Path.Rectangle(rectangle);\n      path.fillColor = projectState.patternColor;\n      return;\n    }\n\n    // Draws grid patterns\n    if (x2 < x1 && y2 < y1) {\n      for (var x = x1; x >= x2; x -= w) {\n        for (var y = y1; y >= y2; y -= w) {\n          projectState.drawPattern(x, y);\n        }\n      }\n    }\n\n    if (x2 > x1 && y2 < y1) {\n      for (var x = x1; x <= x2; x += w) {\n        for (var y = y1; y >= y2; y -= w) {\n          projectState.drawPattern(x, y);\n        }\n      }\n    }\n\n    if (x2 < x1 && y2 > y1) {\n      for (var x = x1; x >= x2; x -= w) {\n        for (var y = y1; y <= y2; y += w) {\n          projectState.drawPattern(x, y);\n        }\n      }\n    }\n\n    if (x2 > x1 && y2 > y1) {\n      for (var x = x1; x <= x2; x += w) {\n        for (var y = y1; y <= y2; y += w) {\n          projectState.drawPattern(x, y);\n        }\n      }\n    }\n  };\n  const circleShape = (event) => {\n    // Refreshes canvas every frame (super important for performance!)\n    project.activeLayer.clear();\n    // Sets beginning and end points, and pattern spacing\n    var x1 = event.downPoint.x;\n    var y1 = event.downPoint.y;\n    var x2 = event.point.x;\n    var y2 = event.point.y;\n    var w = projectState.spacingValue;\n    var h = projectState.spacingValue;\n    var size = projectState.sizeValue;\n    var point1 = new Point(x1, y1);\n    var point2 = new Point(x1, y2);\n    var r = point1.getDistance(point2);\n    var j = 50;\n    var i;\n    var group = new Group();\n\n    // Draws Diagonal Lines\n    if (projectState.patternType === \"diagonal-lines\") {\n      for (var y = y1 + w, i = 1; y <= y2; y += w / 2, i++) {\n        var patternShape = new Path.Line(\n          new Point(\n            x1 + (i * w) / 2,\n            -Math.sqrt(Math.pow(r, 2) - Math.pow(y - y1, 2)) + y1\n          ),\n          new Point(\n            x1 + (i * w) / 2,\n            Math.sqrt(Math.pow(r, 2) - Math.pow(y - y1, 2)) + y1\n          )\n        );\n        patternShape.strokeColor = projectState.patternColor;\n        patternShape.strokeWidth = size / 3;\n        group.addChild(patternShape);\n      }\n      for (var y = y1, i = 0; y <= y2; y += w / 2, i--) {\n        var patternShape2 = new Path.Line(\n          new Point(\n            x1 + (i * w) / 2,\n            -Math.sqrt(Math.pow(r, 2) - Math.pow(y - y1, 2)) + y1\n          ),\n          new Point(\n            x1 + (i * w) / 2,\n            Math.sqrt(Math.pow(r, 2) - Math.pow(y - y1, 2)) + y1\n          )\n        );\n        patternShape2.strokeColor = projectState.patternColor;\n        patternShape2.strokeWidth = size / 3;\n        group.addChild(patternShape2);\n      }\n      group.rotate(45, x1, y1);\n      return;\n    }\n\n    // Draws Halftone\n    if (projectState.patternType === \"halftone-circles\") {\n      // Draws pattern for downward mouse drag\n      if (y2 > y1) {\n        for (var y = y1 + w / 8, i = j; y <= y2, i > 1; y += w / 2, i--) {\n          for (\n            var x = x1;\n            x <= Math.sqrt(Math.pow(r, 2) - Math.pow(y - y1 - r, 2)) + x1;\n            x += w / 2\n          ) {\n            new Path.Circle(\n              new Point(x, y),\n              (10 * size * (i / j)) / 4\n            ).fillColor = projectState.patternColor;\n          }\n        }\n        for (var y = y1 + w / 8, i = j; y <= y2, i > 1; y += w / 2, i--) {\n          for (\n            var x = x1 - w / 2;\n            x >= -Math.sqrt(Math.pow(r, 2) - Math.pow(y - y1 - r, 2)) + x1;\n            x -= w / 2\n          ) {\n            new Path.Circle(\n              new Point(x, y),\n              (10 * size * (i / j)) / 4\n            ).fillColor = projectState.patternColor;\n          }\n        }\n      }\n      // Draws pattern for upward mouse drag\n      if (y2 < y1) {\n        for (var y = y1 - w / 8, i = j; y >= y2, i > 1; y -= w / 2, i--) {\n          for (\n            var x = x1;\n            x <= Math.sqrt(Math.pow(r, 2) - Math.pow(y - y1 + r, 2)) + x1;\n            x += w / 2\n          ) {\n            new Path.Circle(new Point(x, y), (w * (i / j)) / 4).fillColor =\n              projectState.patternColor;\n          }\n        }\n        for (var y = y1 - w / 8, i = j; y >= y2, i > 1; y -= w / 2, i--) {\n          for (\n            var x = x1 - w / 2;\n            x >= -Math.sqrt(Math.pow(r, 2) - Math.pow(y - y1 + r, 2)) + x1;\n            x -= w / 2\n          ) {\n            new Path.Circle(new Point(x, y), (w * (i / j)) / 4).fillColor =\n              projectState.patternColor;\n          }\n        }\n      }\n      return;\n    }\n\n    // Draws solid shape\n    if (projectState.patternType === \"solid\") {\n      var circle = new Path.Circle(point1, r);\n      circle.fillColor = projectState.patternColor;\n      return;\n    }\n\n    // Draws grid patterns\n    for (var y = 0; y <= 10000; y += h) {\n      for (\n        var x = x1;\n        x <= Math.sqrt(Math.pow(r, 2) - Math.pow(y - y1, 2)) + x1;\n        x += w\n      ) {\n        projectState.drawPattern(x, y);\n      }\n    }\n    for (var y = 0; y <= 10000; y += h) {\n      for (\n        var x = x1 - w;\n        x >= -Math.sqrt(Math.pow(r, 2) - Math.pow(y - y1, 2)) + x1;\n        x -= w\n      ) {\n        projectState.drawPattern(x, y);\n      }\n    }\n  };\n  const triangleShape = (event) => {\n    // Refreshes canvas every frame (super important for performance!)\n    project.activeLayer.clear();\n\n    // Sets beginning and end points, and pattern spacing\n    var x1 = event.downPoint.x;\n    var y1 = event.downPoint.y;\n    var x2 = event.point.x;\n    var y2 = event.point.y;\n    var w = projectState.spacingValue;\n    var size = projectState.sizeValue;\n\n    // Sets number of rows\n    var j = 50;\n    var i;\n\n    // Draws pattern\n    if (projectState.patternType === \"diagonal-lines\") {\n      if (y2 > y1) {\n        for (\n          var y = y1, i = 0;\n          y <= y2;\n          y += ((w / 2) * Math.sqrt(3)) / 2, i++\n        ) {\n          var patternShape = new Path.Line(\n            new Point(x1 + (i * w) / 2 / 2, y),\n            new Point(x1 - (y2 - y1) / Math.sqrt(3) + (i * w) / 2, y2)\n          );\n          patternShape.strokeColor = projectState.patternColor;\n          patternShape.strokeWidth = size / 3;\n        }\n      } else {\n        for (\n          var y = y1, i = 0;\n          y >= y2;\n          y -= ((w / 2) * Math.sqrt(3)) / 2, i--\n        ) {\n          var patternShape = new Path.Line(\n            new Point(x1 + (i * w) / 2 / 2, y),\n            new Point(x1 - (y2 - y1) / Math.sqrt(3) + (i * w) / 2, y2)\n          );\n          patternShape.strokeColor = projectState.patternColor;\n          patternShape.strokeWidth = size / 3;\n        }\n      }\n      return;\n    }\n\n    if (projectState.patternType === \"halftone-circles\") {\n      // Draws pattern for downward mouse drag\n      if (y2 > y1) {\n        for (\n          var y = y1, i = j;\n          y <= y2;\n          y += ((Math.sqrt(3) / 2) * w) / 2, i--\n        ) {\n          for (\n            var x = (-1 / Math.sqrt(3)) * y + x1 + (1 / Math.sqrt(3)) * y1;\n            x <= (1 / Math.sqrt(3)) * y + x1 - 0.578 * y1;\n            x += w / 2\n          ) {\n            new Path.Circle(new Point(x, y), (w * (i / j)) / 4).fillColor =\n              projectState.patternColor;\n          }\n        }\n      }\n      // Draws pattern for upward mouse drag\n      if (y2 < y1) {\n        for (\n          var y = y1, i = j;\n          y >= y2;\n          y -= ((Math.sqrt(3) / 2) * w) / 2, i--\n        ) {\n          for (\n            var x = (1 / Math.sqrt(3)) * y + x1 - (1 / Math.sqrt(3)) * y1;\n            x <= (-1 / Math.sqrt(3)) * y + x1 + 0.578 * y1;\n            x += w / 2\n          ) {\n            new Path.Circle(new Point(x, y), (w * (i / j)) / 4).fillColor =\n              projectState.patternColor;\n          }\n        }\n      }\n      return;\n    }\n\n    // Draws solid shape\n    if (projectState.patternType === \"solid\") {\n      var path = new Path({\n        segments: [\n          [x1, y1],\n          [(-1 / Math.sqrt(3)) * y2 + x1 + (1 / Math.sqrt(3)) * y1, y2],\n          [(1 / Math.sqrt(3)) * y2 + x1 - 0.578 * y1, y2],\n        ],\n        fillColor: projectState.patternColor,\n        closed: true,\n      });\n      return;\n    }\n\n    // Draws grid patterns\n    if (y2 > y1) {\n      for (var y = y1; y <= y2; y += (Math.sqrt(3) / 2) * w) {\n        for (\n          var x = (-1 / Math.sqrt(3)) * y + x1 + (1 / Math.sqrt(3)) * y1;\n          x <= (1 / Math.sqrt(3)) * y + x1 - 0.578 * y1;\n          x += w\n        ) {\n          projectState.drawPattern(x, y);\n        }\n      }\n    }\n\n    if (y2 < y1) {\n      for (var y = y1; y >= y2; y -= (Math.sqrt(3) / 2) * w) {\n        for (\n          var x = (1 / Math.sqrt(3)) * y + x1 - (1 / Math.sqrt(3)) * y1;\n          x <= (-1 / Math.sqrt(3)) * y + x1 + 0.578 * y1;\n          x += w\n        ) {\n          projectState.drawPattern(x, y);\n        }\n      }\n    }\n  };\n\n  const circlePattern = (x, y) => {\n    var size = projectState.sizeValue;\n    var x;\n    var y;\n\n    new Path.Circle(new Point(x, y), size).fillColor =\n      projectState.patternColor;\n  };\n\n  const squarePattern = (x, y) => {\n    var size = (projectState.sizeValue * 5) / 3;\n    var x;\n    var y;\n\n    new Path.Rectangle(new Point(x, y), size, size).fillColor =\n      projectState.patternColor;\n  };\n\n  const slashPattern = (x, y) => {\n    var size = projectState.sizeValue;\n    var l = (size * 8) / 3;\n    var x;\n    var y;\n\n    var patternShape = new Path.Line(\n      new Point(x, y),\n      new Point(x - (3 / 4) * l, y + l)\n    );\n    patternShape.strokeColor = projectState.patternColor;\n    patternShape.strokeWidth = (size * 2) / 3;\n  };\n\n  const crossPattern = (x, y) => {\n    var size = projectState.sizeValue;\n    var l = (size * 10) / 3;\n    var x;\n    var y;\n\n    var patternShapeUp = new Path.Line(\n      new Point(x + l / 2, y),\n      new Point(x + l / 2, y + l)\n    );\n    patternShapeUp.strokeColor = projectState.patternColor;\n    patternShapeUp.strokeWidth = size / 3;\n    var patternShapeDown = new Path.Line(\n      new Point(x, y + l / 2),\n      new Point(x + l, y + l / 2)\n    );\n    patternShapeDown.strokeColor = projectState.patternColor;\n    patternShapeDown.strokeWidth = size / 3;\n  };\n\n  const value = {\n    shapeType: \"square\",\n    drawShape: squareShape,\n    patternType: \"circle-pattern\",\n    drawPattern: circlePattern,\n    patternColor: \"#D3AD44\",\n    spacingValue: 30,\n    sizeValue: 3,\n    backgroundColor: \"#FFFFFF\",\n  };\n  const [projectState, projectDispatch] = useReducer(reducer, value);\n\n  useEffect(\n    () => {\n      // // Paperjs event listener function that always runs\n      if (projectState.shapeType === \"square\") {\n        projectDispatch({ type: \"SET_DRAW_SHAPE\", payload: squareShape });\n      }\n      if (projectState.shapeType === \"circle\") {\n        projectDispatch({ type: \"SET_DRAW_SHAPE\", payload: circleShape });\n      }\n      if (projectState.shapeType === \"triangle\") {\n        projectDispatch({ type: \"SET_DRAW_SHAPE\", payload: triangleShape });\n      }\n      if (projectState.patternType === \"circle-pattern\") {\n        projectDispatch({ type: \"SET_DRAW_PATTERN\", payload: circlePattern });\n      }\n      if (projectState.patternType === \"square-pattern\") {\n        projectDispatch({ type: \"SET_DRAW_PATTERN\", payload: squarePattern });\n      }\n      if (projectState.patternType === \"slash-pattern\") {\n        projectDispatch({ type: \"SET_DRAW_PATTERN\", payload: slashPattern });\n      }\n      if (projectState.patternType === \"cross-pattern\") {\n        projectDispatch({ type: \"SET_DRAW_PATTERN\", payload: crossPattern });\n      }\n    },\n    // useEffect dependencies\n    [\n      projectState.shapeType,\n      projectState.patternType,\n      projectState.drawShape,\n      projectState.patternColor,\n      projectState.spacingValue,\n      projectState.sizeValue,\n    ]\n  );\n\n  return (\n    <ProjectContext.Provider value={[projectState, projectDispatch]}>\n      {children}\n    </ProjectContext.Provider>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useProjectContext } from \"../../Context/ProjectContext\";\nimport Paper, { Path, Point, PaperScope, project, Tool } from \"paper\";\n\nconst ShapeTool = () => {\n  const [projectState, projectDispatch] = useProjectContext();\n\n  const isShapeSelected = (shape) => {\n    return projectState.shapeType === shape;\n  };\n\n  return (\n    <div className=\"Drawing-tools\">\n      <div className=\"tool-name\">Shape</div>\n      <div>\n        <button\n          className=\"shape-button\"\n          onClick={() => {\n            projectDispatch({ type: \"SET_SHAPE_TYPE\", payload: \"square\" });\n          }}\n        >\n          <svg\n            class={\n              isShapeSelected(\"square\") ? \"shape-icon-selected\" : \"shape-icon\"\n            }\n            width=\"64\"\n            height=\"64\"\n            viewBox=\"0 0 64 64\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <rect\n              x=\"1\"\n              y=\"1\"\n              width=\"62\"\n              height=\"62\"\n              stroke=\"#8A124D\"\n              stroke-width=\"2\"\n            />\n          </svg>\n        </button>\n        <button\n          className=\"shape-button\"\n          onClick={() =>\n            projectDispatch({ type: \"SET_SHAPE_TYPE\", payload: \"circle\" })\n          }\n        >\n          <svg\n            class={\n              isShapeSelected(\"circle\") ? \"shape-icon-selected\" : \"shape-icon\"\n            }\n            width=\"64\"\n            height=\"64\"\n            viewBox=\"0 0 62 62\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <circle cx=\"31\" cy=\"31\" r=\"30\" stroke=\"#8A124D\" stroke-width=\"2\" />\n          </svg>\n        </button>\n        <button\n          className=\"shape-button\"\n          onClick={() =>\n            projectDispatch({ type: \"SET_SHAPE_TYPE\", payload: \"triangle\" })\n          }\n        >\n          <svg\n            class={\n              isShapeSelected(\"triangle\") ? \"shape-icon-selected\" : \"shape-icon\"\n            }\n            width=\"74\"\n            height=\"64\"\n            viewBox=\"0 0 72 62\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M1.737 61L36 1.99149L70.263 61H1.737Z\"\n              stroke=\"#8A124D\"\n              stroke-width=\"2\"\n            />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ShapeTool;\n","import React from \"react\";\nimport { useProjectContext } from \"../../Context/ProjectContext\";\n\nconst PatternTool = () => {\n  const [projectState, projectDispatch] = useProjectContext();\n\n  const isPatternSelected = (pattern) => {\n    return projectState.patternType === pattern;\n  };\n\n  return (\n    <div className=\"Drawing-tools\">\n      <div className=\"tool-name\">Pattern</div>\n      <div className=\"pattern-button-block\">\n        <button\n          className=\"pattern-button\"\n          onClick={() => {\n            projectDispatch({\n              type: \"SET_PATTERN_TYPE\",\n              payload: \"circle-pattern\",\n            });\n          }}\n        >\n          <svg\n            class={\n              isPatternSelected(\"circle-pattern\")\n                ? \"pattern-icon-selected\"\n                : \"pattern-icon\"\n            }\n            width=\"52\"\n            height=\"52\"\n            viewBox=\"0 0 61 60\"\n            fill=\"#fff8f5\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <rect\n              class=\"pattern-icon\"\n              x=\"2\"\n              y=\"1\"\n              width=\"58\"\n              height=\"58\"\n              rx=\"2\"\n              stroke=\"#8A124D\"\n              stroke-width=\"2\"\n            />\n            <mask\n              id=\"mask0\"\n              mask-type=\"alpha\"\n              maskUnits=\"userSpaceOnUse\"\n              x=\"0\"\n              y=\"0\"\n              width=\"60\"\n              height=\"60\"\n            >\n              <rect x=\"0.5\" width=\"59\" height=\"60\" rx=\"3\" fill=\"white\" />\n            </mask>\n            <g mask=\"url(#mask0)\">\n              <circle cx=\"11.5\" cy=\"10\" r=\"3\" fill=\"#231F20\" />\n              <circle cx=\"11.5\" cy=\"29\" r=\"3\" fill=\"#231F20\" />\n              <circle cx=\"11.5\" cy=\"50\" r=\"3\" fill=\"#231F20\" />\n              <circle cx=\"30.5\" cy=\"10\" r=\"3\" fill=\"#231F20\" />\n              <circle cx=\"30.5\" cy=\"29\" r=\"3\" fill=\"#231F20\" />\n              <circle cx=\"30.5\" cy=\"50\" r=\"3\" fill=\"#231F20\" />\n              <circle cx=\"50.5\" cy=\"10\" r=\"3\" fill=\"#231F20\" />\n              <circle cx=\"50.5\" cy=\"29\" r=\"3\" fill=\"#231F20\" />\n              <circle cx=\"50.5\" cy=\"50\" r=\"3\" fill=\"#231F20\" />\n            </g>\n          </svg>\n        </button>\n        <button\n          className=\"pattern-button\"\n          onClick={() => {\n            projectDispatch({\n              type: \"SET_PATTERN_TYPE\",\n              payload: \"square-pattern\",\n            });\n          }}\n        >\n          <svg\n            class={\n              isPatternSelected(\"square-pattern\")\n                ? \"pattern-icon-selected\"\n                : \"pattern-icon\"\n            }\n            width=\"52\"\n            height=\"52\"\n            viewBox=\"0 0 61 60\"\n            fill=\"#fff8f5\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <rect\n              class=\"pattern-icon\"\n              x=\"2\"\n              y=\"1\"\n              width=\"58\"\n              height=\"58\"\n              rx=\"2\"\n              stroke=\"#8A124D\"\n              stroke-width=\"2\"\n            />\n            <mask\n              id=\"mask0\"\n              mask-type=\"alpha\"\n              maskUnits=\"userSpaceOnUse\"\n              x=\"0\"\n              y=\"0\"\n              width=\"60\"\n              height=\"60\"\n            >\n              <rect x=\"0.5\" width=\"60\" height=\"60\" rx=\"3\" fill=\"white\" />\n            </mask>\n            <g className=\"pattern-element\" mask=\"url(#mask0)\">\n              <rect x=\"9.5\" y=\"7\" width=\"6\" height=\"6\" fill=\"#231F20\" />\n              <rect x=\"9.5\" y=\"27\" width=\"6\" height=\"6\" fill=\"#231F20\" />\n              <rect x=\"9.5\" y=\"48\" width=\"6\" height=\"6\" fill=\"#231F20\" />\n              <rect x=\"27.5\" y=\"7\" width=\"6\" height=\"6\" fill=\"#231F20\" />\n              <rect x=\"27.5\" y=\"27\" width=\"6\" height=\"6\" fill=\"#231F20\" />\n              <rect x=\"27.5\" y=\"48\" width=\"6\" height=\"6\" fill=\"#231F20\" />\n              <rect x=\"46.5\" y=\"7\" width=\"6\" height=\"6\" fill=\"#231F20\" />\n              <rect x=\"46.5\" y=\"27\" width=\"6\" height=\"6\" fill=\"#231F20\" />\n              <rect x=\"46.5\" y=\"48\" width=\"6\" height=\"6\" fill=\"#231F20\" />\n            </g>\n          </svg>\n        </button>\n        <button\n          className=\"pattern-button\"\n          onClick={() => {\n            projectDispatch({\n              type: \"SET_PATTERN_TYPE\",\n              payload: \"slash-pattern\",\n            });\n          }}\n        >\n          <svg\n            class={\n              isPatternSelected(\"slash-pattern\")\n                ? \"pattern-icon-selected\"\n                : \"pattern-icon\"\n            }\n            width=\"52\"\n            height=\"52\"\n            viewBox=\"0 0 61 60\"\n            fill=\"#fff8f5\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <rect\n              class=\"pattern-icon\"\n              x=\"1\"\n              y=\"1\"\n              width=\"58\"\n              height=\"58\"\n              rx=\"2\"\n              stroke=\"#8A124D\"\n              stroke-width=\"2\"\n            />\n            <mask\n              id=\"mask0\"\n              mask-type=\"alpha\"\n              maskUnits=\"userSpaceOnUse\"\n              x=\"1\"\n              y=\"0\"\n              width=\"60\"\n              height=\"60\"\n            >\n              <rect x=\"1\" width=\"60\" height=\"60\" rx=\"3\" fill=\"white\" />\n            </mask>\n            <g mask=\"url(#mask0)\">\n              <path d=\"M13 6L7.7416 13H6L11.2584 6H13Z\" fill=\"#231F20\" />\n              <path d=\"M13 26L7.7416 33H6L11.2584 26H13Z\" fill=\"#231F20\" />\n              <path d=\"M13 46L7.7416 53H6L11.2584 46H13Z\" fill=\"#231F20\" />\n              <path d=\"M33 6L27.7388 13H26L31.2584 6H33Z\" fill=\"#231F20\" />\n              <path d=\"M33 26L27.7388 33H26L31.2584 26H33Z\" fill=\"#231F20\" />\n              <path d=\"M33 46L27.7388 53H26L31.2584 46H33Z\" fill=\"#231F20\" />\n              <path d=\"M53 6L47.7416 13H46L51.2612 6H53Z\" fill=\"#231F20\" />\n              <path d=\"M53 26L47.7416 33H46L51.2612 26H53Z\" fill=\"#231F20\" />\n              <path d=\"M53 46L47.7416 53H46L51.2612 46H53Z\" fill=\"#231F20\" />\n            </g>\n          </svg>\n        </button>\n        <button\n          className=\"pattern-button\"\n          onClick={() => {\n            projectDispatch({\n              type: \"SET_PATTERN_TYPE\",\n              payload: \"cross-pattern\",\n            });\n          }}\n        >\n          <svg\n            class={\n              isPatternSelected(\"cross-pattern\")\n                ? \"pattern-icon-selected\"\n                : \"pattern-icon\"\n            }\n            width=\"52\"\n            height=\"52\"\n            viewBox=\"0 0 60 61\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <rect\n              x=\"1\"\n              y=\"1\"\n              width=\"58\"\n              height=\"58\"\n              rx=\"2\"\n              stroke=\"#8A124D\"\n              stroke-width=\"2\"\n            />\n            <mask\n              id=\"mask0\"\n              mask-type=\"alpha\"\n              maskUnits=\"userSpaceOnUse\"\n              x=\"0\"\n              y=\"0\"\n              width=\"60\"\n              height=\"61\"\n            >\n              <rect y=\"0.5\" width=\"60\" height=\"60\" rx=\"3\" fill=\"white\" />\n            </mask>\n            <g mask=\"url(#mask0)\">\n              <line x1=\"15\" y1=\"10\" x2=\"15\" y2=\"20\" stroke=\"#231F20\" />\n              <line x1=\"10\" y1=\"15\" x2=\"20\" y2=\"15\" stroke=\"#231F20\" />\n              <line x1=\"15\" y1=\"40\" x2=\"15\" y2=\"50\" stroke=\"#231F20\" />\n              <line x1=\"10\" y1=\"45\" x2=\"20\" y2=\"45\" stroke=\"#231F20\" />\n              <line x1=\"44\" y1=\"10\" x2=\"44\" y2=\"20\" stroke=\"#231F20\" />\n              <line x1=\"39\" y1=\"15\" x2=\"49\" y2=\"15\" stroke=\"#231F20\" />\n              <line x1=\"44\" y1=\"40\" x2=\"44\" y2=\"50\" stroke=\"#231F20\" />\n              <line x1=\"39\" y1=\"45\" x2=\"49\" y2=\"45\" stroke=\"#231F20\" />\n            </g>\n          </svg>\n        </button>\n        <button\n          className=\"pattern-button\"\n          onClick={() => {\n            projectDispatch({\n              type: \"SET_PATTERN_TYPE\",\n              payload: \"diagonal-lines\",\n            });\n          }}\n        >\n          <svg\n            class={\n              isPatternSelected(\"diagonal-lines\")\n                ? \"pattern-icon-selected\"\n                : \"pattern-icon\"\n            }\n            width=\"52\"\n            height=\"52\"\n            viewBox=\"0 0 60 60\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <rect\n              x=\"1\"\n              y=\"1\"\n              width=\"58\"\n              height=\"58\"\n              rx=\"2\"\n              stroke=\"#8A124D\"\n              stroke-width=\"2\"\n            />\n            <mask\n              id=\"mask0\"\n              mask-type=\"alpha\"\n              maskUnits=\"userSpaceOnUse\"\n              x=\"2\"\n              y=\"2\"\n              width=\"56\"\n              height=\"56\"\n            >\n              <rect x=\"2\" y=\"2\" width=\"56\" height=\"56\" fill=\"white\" />\n            </mask>\n            <g mask=\"url(#mask0)\">\n              <line\n                x1=\"11.6464\"\n                y1=\"58.6464\"\n                x2=\"58.6464\"\n                y2=\"11.6464\"\n                stroke=\"#231F20\"\n              />\n              <line\n                x1=\"-4.35355\"\n                y1=\"47.6464\"\n                x2=\"42.6464\"\n                y2=\"0.646445\"\n                stroke=\"#231F20\"\n              />\n              <line\n                x1=\"0.646447\"\n                y1=\"28.6464\"\n                x2=\"28.6464\"\n                y2=\"0.646447\"\n                stroke=\"#231F20\"\n              />\n              <line\n                x1=\"0.646447\"\n                y1=\"15.6464\"\n                x2=\"15.6464\"\n                y2=\"0.646447\"\n                stroke=\"#231F20\"\n              />\n              <line\n                x1=\"0.646447\"\n                y1=\"56.6464\"\n                x2=\"56.6464\"\n                y2=\"0.646447\"\n                stroke=\"#231F20\"\n              />\n              <line\n                x1=\"25.6464\"\n                y1=\"58.6464\"\n                x2=\"58.6464\"\n                y2=\"25.6464\"\n                stroke=\"#231F20\"\n              />\n              <line\n                x1=\"38.6464\"\n                y1=\"58.6464\"\n                x2=\"58.6464\"\n                y2=\"38.6464\"\n                stroke=\"#231F20\"\n              />\n              <line\n                x1=\"51.6464\"\n                y1=\"58.6464\"\n                x2=\"58.6464\"\n                y2=\"51.6464\"\n                stroke=\"#231F20\"\n              />\n            </g>\n            <rect\n              x=\"1\"\n              y=\"1\"\n              width=\"58\"\n              height=\"58\"\n              rx=\"2\"\n              stroke=\"#8A124D\"\n              stroke-width=\"2\"\n              fill=\"none\"\n            />\n          </svg>\n        </button>\n        <button\n          className=\"pattern-button\"\n          onClick={() => {\n            projectDispatch({\n              type: \"SET_PATTERN_TYPE\",\n              payload: \"halftone-circles\",\n            });\n          }}\n        >\n          <svg\n            class={\n              isPatternSelected(\"halftone-circles\")\n                ? \"pattern-icon-selected\"\n                : \"pattern-icon\"\n            }\n            width=\"52\"\n            height=\"52\"\n            viewBox=\"0 0 60 60\"\n            fill=\"#fff8f5\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <rect\n              class=\"pattern-icon\"\n              x=\"1\"\n              y=\"1\"\n              width=\"58\"\n              height=\"58\"\n              rx=\"2\"\n              stroke=\"#8A124D\"\n              stroke-width=\"2\"\n            />\n            <path\n              d=\"M4.32031 6.52917C4.32031 5.44928 5.19574 4.57385 6.27563 4.57385C7.35552 4.57385 8.23094 5.44928 8.23094 6.52917C8.23094 7.60906 7.35552 8.48448 6.27563 8.48448C5.19574 8.48448 4.32031 7.60906 4.32031 6.52917Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M10.2793 6.52917C10.2793 5.44928 11.1547 4.57385 12.2346 4.57385C13.3145 4.57385 14.1899 5.44928 14.1899 6.52917C14.1899 7.60906 13.3145 8.48448 12.2346 8.48448C11.1547 8.48448 10.2793 7.60906 10.2793 6.52917Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M16.2383 6.52917C16.2383 5.44928 17.1137 4.57385 18.1936 4.57385C19.2735 4.57385 20.1489 5.44928 20.1489 6.52917C20.1489 7.60906 19.2735 8.48448 18.1936 8.48448C17.1137 8.48448 16.2383 7.60906 16.2383 6.52917Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M22.1973 6.52917C22.1973 5.44928 23.0727 4.57385 24.1526 4.57385C25.2325 4.57385 26.1079 5.44928 26.1079 6.52917C26.1079 7.60906 25.2325 8.48448 24.1526 8.48448C23.0727 8.48448 22.1973 7.60906 22.1973 6.52917Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M28.1562 6.52917C28.1562 5.44928 29.0317 4.57385 30.1116 4.57385C31.1915 4.57385 32.0669 5.44928 32.0669 6.52917C32.0669 7.60906 31.1915 8.48448 30.1116 8.48448C29.0317 8.48448 28.1562 7.60906 28.1562 6.52917Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M34.1152 6.52917C34.1152 5.44928 34.9907 4.57385 36.0706 4.57385C37.1504 4.57385 38.0259 5.44928 38.0259 6.52917C38.0259 7.60906 37.1504 8.48448 36.0706 8.48448C34.9907 8.48448 34.1152 7.60906 34.1152 6.52917Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M40.0742 6.52917C40.0742 5.44928 40.9496 4.57385 42.0295 4.57385C43.1094 4.57385 43.9849 5.44928 43.9849 6.52917C43.9849 7.60906 43.1094 8.48448 42.0295 8.48448C40.9496 8.48448 40.0742 7.60906 40.0742 6.52917Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M46.0332 6.52917C46.0332 5.44928 46.9086 4.57385 47.9885 4.57385C49.0684 4.57385 49.9438 5.44928 49.9438 6.52917C49.9438 7.60906 49.0684 8.48448 47.9885 8.48448C46.9086 8.48448 46.0332 7.60906 46.0332 6.52917Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M51.9922 6.52917C51.9922 5.44928 52.8676 4.57385 53.9475 4.57385C55.0274 4.57385 55.9028 5.44928 55.9028 6.52917C55.9028 7.60906 55.0274 8.48448 53.9475 8.48448C52.8676 8.48448 51.9922 7.60906 51.9922 6.52917Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M4.41406 12.4882C4.41406 11.4598 5.2478 10.626 6.27627 10.626C7.30474 10.626 8.13847 11.4598 8.13847 12.4882C8.13847 13.5167 7.30474 14.3504 6.27627 14.3504C5.2478 14.3504 4.41406 13.5167 4.41406 12.4882Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M10.373 12.4882C10.373 11.4598 11.2068 10.626 12.2353 10.626C13.2637 10.626 14.0975 11.4598 14.0975 12.4882C14.0975 13.5167 13.2637 14.3504 12.2353 14.3504C11.2068 14.3504 10.373 13.5167 10.373 12.4882Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M16.332 12.4882C16.332 11.4598 17.1658 10.626 18.1942 10.626C19.2227 10.626 20.0564 11.4598 20.0564 12.4882C20.0564 13.5167 19.2227 14.3504 18.1942 14.3504C17.1658 14.3504 16.332 13.5167 16.332 12.4882Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M22.291 12.4882C22.291 11.4598 23.1248 10.626 24.1532 10.626C25.1817 10.626 26.0154 11.4598 26.0154 12.4882C26.0154 13.5167 25.1817 14.3504 24.1532 14.3504C23.1248 14.3504 22.291 13.5167 22.291 12.4882Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M28.25 12.4882C28.25 11.4598 29.0837 10.626 30.1122 10.626C31.1407 10.626 31.9744 11.4598 31.9744 12.4882C31.9744 13.5167 31.1407 14.3504 30.1122 14.3504C29.0837 14.3504 28.25 13.5167 28.25 12.4882Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M34.209 12.4882C34.209 11.4598 35.0427 10.626 36.0712 10.626C37.0997 10.626 37.9334 11.4598 37.9334 12.4882C37.9334 13.5167 37.0997 14.3504 36.0712 14.3504C35.0427 14.3504 34.209 13.5167 34.209 12.4882Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M40.168 12.4882C40.168 11.4598 41.0017 10.626 42.0302 10.626C43.0586 10.626 43.8924 11.4598 43.8924 12.4882C43.8924 13.5167 43.0586 14.3504 42.0302 14.3504C41.0017 14.3504 40.168 13.5167 40.168 12.4882Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M46.127 12.4882C46.127 11.4598 46.9607 10.626 47.9892 10.626C49.0176 10.626 49.8514 11.4598 49.8514 12.4882C49.8514 13.5167 49.0176 14.3504 47.9892 14.3504C46.9607 14.3504 46.127 13.5167 46.127 12.4882Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M52.0859 12.4882C52.0859 11.4598 52.9197 10.626 53.9481 10.626C54.9766 10.626 55.8103 11.4598 55.8103 12.4882C55.8103 13.5167 54.9766 14.3504 53.9481 14.3504C52.9197 14.3504 52.0859 13.5167 52.0859 12.4882Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M4.50586 18.4473C4.50586 17.4703 5.29791 16.6782 6.27495 16.6782C7.252 16.6782 8.04405 17.4703 8.04405 18.4473C8.04405 19.4244 7.252 20.2164 6.27495 20.2164C5.29791 20.2164 4.50586 19.4244 4.50586 18.4473Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M10.4648 18.4473C10.4648 17.4703 11.2569 16.6782 12.2339 16.6782C13.211 16.6782 14.003 17.4703 14.003 18.4473C14.003 19.4244 13.211 20.2164 12.2339 20.2164C11.2569 20.2164 10.4648 19.4244 10.4648 18.4473Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M16.4238 18.4473C16.4238 17.4703 17.2159 16.6782 18.1929 16.6782C19.17 16.6782 19.962 17.4703 19.962 18.4473C19.962 19.4244 19.17 20.2164 18.1929 20.2164C17.2159 20.2164 16.4238 19.4244 16.4238 18.4473Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M22.3828 18.4473C22.3828 17.4703 23.1749 16.6782 24.1519 16.6782C25.129 16.6782 25.921 17.4703 25.921 18.4473C25.921 19.4244 25.129 20.2164 24.1519 20.2164C23.1749 20.2164 22.3828 19.4244 22.3828 18.4473Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M28.3418 18.4473C28.3418 17.4703 29.1338 16.6782 30.1109 16.6782C31.0879 16.6782 31.88 17.4703 31.88 18.4473C31.88 19.4244 31.0879 20.2164 30.1109 20.2164C29.1338 20.2164 28.3418 19.4244 28.3418 18.4473Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M34.3027 18.4473C34.3027 17.4703 35.0948 16.6782 36.0718 16.6782C37.0489 16.6782 37.8409 17.4703 37.8409 18.4473C37.8409 19.4244 37.0489 20.2164 36.0718 20.2164C35.0948 20.2164 34.3027 19.4244 34.3027 18.4473Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M40.2617 18.4473C40.2617 17.4703 41.0538 16.6782 42.0308 16.6782C43.0079 16.6782 43.7999 17.4703 43.7999 18.4473C43.7999 19.4244 43.0079 20.2164 42.0308 20.2164C41.0538 20.2164 40.2617 19.4244 40.2617 18.4473Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M46.2207 18.4473C46.2207 17.4703 47.0128 16.6782 47.9898 16.6782C48.9668 16.6782 49.7589 17.4703 49.7589 18.4473C49.7589 19.4244 48.9668 20.2164 47.9898 20.2164C47.0128 20.2164 46.2207 19.4244 46.2207 18.4473Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M52.1797 18.4473C52.1797 17.4703 52.9717 16.6782 53.9488 16.6782C54.9258 16.6782 55.7179 17.4703 55.7179 18.4473C55.7179 19.4244 54.9258 20.2164 53.9488 20.2164C52.9717 20.2164 52.1797 19.4244 52.1797 18.4473Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M4.59961 24.4063C4.59961 23.4807 5.34997 22.7303 6.27559 22.7303C7.20122 22.7303 7.95158 23.4807 7.95158 24.4063C7.95158 25.332 7.20122 26.0823 6.27559 26.0823C5.34997 26.0823 4.59961 25.332 4.59961 24.4063Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M10.5586 24.4063C10.5586 23.4807 11.309 22.7303 12.2346 22.7303C13.1602 22.7303 13.9106 23.4807 13.9106 24.4063C13.9106 25.332 13.1602 26.0823 12.2346 26.0823C11.309 26.0823 10.5586 25.332 10.5586 24.4063Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M16.5176 24.4063C16.5176 23.4807 17.2679 22.7303 18.1936 22.7303C19.1192 22.7303 19.8695 23.4807 19.8695 24.4063C19.8695 25.332 19.1192 26.0823 18.1936 26.0823C17.2679 26.0823 16.5176 25.332 16.5176 24.4063Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M22.4766 24.4063C22.4766 23.4807 23.2269 22.7303 24.1525 22.7303C25.0782 22.7303 25.8285 23.4807 25.8285 24.4063C25.8285 25.332 25.0782 26.0823 24.1525 26.0823C23.2269 26.0823 22.4766 25.332 22.4766 24.4063Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M28.4355 24.4063C28.4355 23.4807 29.1859 22.7303 30.1115 22.7303C31.0372 22.7303 31.7875 23.4807 31.7875 24.4063C31.7875 25.332 31.0372 26.0823 30.1115 26.0823C29.1859 26.0823 28.4355 25.332 28.4355 24.4063Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M34.3945 24.4063C34.3945 23.4807 35.1449 22.7303 36.0705 22.7303C36.9961 22.7303 37.7465 23.4807 37.7465 24.4063C37.7465 25.332 36.9961 26.0823 36.0705 26.0823C35.1449 26.0823 34.3945 25.332 34.3945 24.4063Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M40.3535 24.4063C40.3535 23.4807 41.1039 22.7303 42.0295 22.7303C42.9551 22.7303 43.7055 23.4807 43.7055 24.4063C43.7055 25.332 42.9551 26.0823 42.0295 26.0823C41.1039 26.0823 40.3535 25.332 40.3535 24.4063Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M46.3125 24.4063C46.3125 23.4807 47.0629 22.7303 47.9885 22.7303C48.9141 22.7303 49.6645 23.4807 49.6645 24.4063C49.6645 25.332 48.9141 26.0823 47.9885 26.0823C47.0629 26.0823 46.3125 25.332 46.3125 24.4063Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M52.2715 24.4063C52.2715 23.4807 53.0218 22.7303 53.9475 22.7303C54.8731 22.7303 55.6235 23.4807 55.6235 24.4063C55.6235 25.332 54.8731 26.0823 53.9475 26.0823C53.0218 26.0823 52.2715 25.332 52.2715 24.4063Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M4.69336 30.3654C4.69336 29.4912 5.40204 28.7825 6.27623 28.7825C7.15043 28.7825 7.85911 29.4912 7.85911 30.3654C7.85911 31.2396 7.15043 31.9483 6.27623 31.9483C5.40204 31.9483 4.69336 31.2396 4.69336 30.3654Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M10.6523 30.3654C10.6523 29.4912 11.361 28.7825 12.2352 28.7825C13.1094 28.7825 13.8181 29.4912 13.8181 30.3654C13.8181 31.2396 13.1094 31.9483 12.2352 31.9483C11.361 31.9483 10.6523 31.2396 10.6523 30.3654Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M16.6113 30.3654C16.6113 29.4912 17.32 28.7825 18.1942 28.7825C19.0684 28.7825 19.7771 29.4912 19.7771 30.3654C19.7771 31.2396 19.0684 31.9483 18.1942 31.9483C17.32 31.9483 16.6113 31.2396 16.6113 30.3654Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M22.5703 30.3654C22.5703 29.4912 23.279 28.7825 24.1532 28.7825C25.0274 28.7825 25.7361 29.4912 25.7361 30.3654C25.7361 31.2396 25.0274 31.9483 24.1532 31.9483C23.279 31.9483 22.5703 31.2396 22.5703 30.3654Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M28.5293 30.3654C28.5293 29.4912 29.238 28.7825 30.1122 28.7825C30.9864 28.7825 31.695 29.4912 31.695 30.3654C31.695 31.2396 30.9864 31.9483 30.1122 31.9483C29.238 31.9483 28.5293 31.2396 28.5293 30.3654Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M34.4883 30.3654C34.4883 29.4912 35.197 28.7825 36.0712 28.7825C36.9454 28.7825 37.654 29.4912 37.654 30.3654C37.654 31.2396 36.9454 31.9483 36.0712 31.9483C35.197 31.9483 34.4883 31.2396 34.4883 30.3654Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M40.4473 30.3654C40.4473 29.4912 41.1559 28.7825 42.0301 28.7825C42.9043 28.7825 43.613 29.4912 43.613 30.3654C43.613 31.2396 42.9043 31.9483 42.0301 31.9483C41.1559 31.9483 40.4473 31.2396 40.4473 30.3654Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M46.4062 30.3654C46.4062 29.4912 47.1149 28.7825 47.9891 28.7825C48.8633 28.7825 49.572 29.4912 49.572 30.3654C49.572 31.2396 48.8633 31.9483 47.9891 31.9483C47.1149 31.9483 46.4062 31.2396 46.4062 30.3654Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M52.3652 30.3654C52.3652 29.4912 53.0739 28.7825 53.9481 28.7825C54.8223 28.7825 55.531 29.4912 55.531 30.3654C55.531 31.2396 54.8223 31.9483 53.9481 31.9483C53.0739 31.9483 52.3652 31.2396 52.3652 30.3654Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M4.78516 36.3245C4.78516 35.5017 5.45215 34.8347 6.27492 34.8347C7.0977 34.8347 7.76469 35.5017 7.76469 36.3245C7.76469 37.1473 7.0977 37.8142 6.27492 37.8142C5.45215 37.8142 4.78516 37.1473 4.78516 36.3245Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M10.7441 36.3245C10.7441 35.5017 11.4111 34.8347 12.2339 34.8347C13.0567 34.8347 13.7237 35.5017 13.7237 36.3245C13.7237 37.1473 13.0567 37.8142 12.2339 37.8142C11.4111 37.8142 10.7441 37.1473 10.7441 36.3245Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M16.7031 36.3245C16.7031 35.5017 17.3701 34.8347 18.1929 34.8347C19.0157 34.8347 19.6827 35.5017 19.6827 36.3245C19.6827 37.1473 19.0157 37.8142 18.1929 37.8142C17.3701 37.8142 16.7031 37.1473 16.7031 36.3245Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M22.6621 36.3245C22.6621 35.5017 23.3291 34.8347 24.1519 34.8347C24.9746 34.8347 25.6416 35.5017 25.6416 36.3245C25.6416 37.1473 24.9746 37.8142 24.1519 37.8142C23.3291 37.8142 22.6621 37.1473 22.6621 36.3245Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M28.623 36.3245C28.623 35.5017 29.29 34.8347 30.1128 34.8347C30.9356 34.8347 31.6026 35.5017 31.6026 36.3245C31.6026 37.1473 30.9356 37.8142 30.1128 37.8142C29.29 37.8142 28.623 37.1473 28.623 36.3245Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M34.582 36.3245C34.582 35.5017 35.249 34.8347 36.0718 34.8347C36.8946 34.8347 37.5616 35.5017 37.5616 36.3245C37.5616 37.1473 36.8946 37.8142 36.0718 37.8142C35.249 37.8142 34.582 37.1473 34.582 36.3245Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M40.541 36.3245C40.541 35.5017 41.208 34.8347 42.0308 34.8347C42.8536 34.8347 43.5205 35.5017 43.5205 36.3245C43.5205 37.1473 42.8536 37.8142 42.0308 37.8142C41.208 37.8142 40.541 37.1473 40.541 36.3245Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M46.5 36.3245C46.5 35.5017 47.167 34.8347 47.9898 34.8347C48.8125 34.8347 49.4795 35.5017 49.4795 36.3245C49.4795 37.1473 48.8125 37.8142 47.9898 37.8142C47.167 37.8142 46.5 37.1473 46.5 36.3245Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M52.459 36.3245C52.459 35.5017 53.126 34.8347 53.9487 34.8347C54.7715 34.8347 55.4385 35.5017 55.4385 36.3245C55.4385 37.1473 54.7715 37.8142 53.9487 37.8142C53.126 37.8142 52.459 37.1473 52.459 36.3245Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M4.87891 42.2835C4.87891 41.5121 5.50421 40.8868 6.27556 40.8868C7.04691 40.8868 7.67221 41.5121 7.67221 42.2835C7.67221 43.0548 7.04691 43.6801 6.27556 43.6801C5.50421 43.6801 4.87891 43.0548 4.87891 42.2835Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M10.8379 42.2835C10.8379 41.5121 11.4632 40.8868 12.2345 40.8868C13.0059 40.8868 13.6312 41.5121 13.6312 42.2835C13.6312 43.0548 13.0059 43.6801 12.2345 43.6801C11.4632 43.6801 10.8379 43.0548 10.8379 42.2835Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M16.7969 42.2835C16.7969 41.5121 17.4222 40.8868 18.1935 40.8868C18.9649 40.8868 19.5902 41.5121 19.5902 42.2835C19.5902 43.0548 18.9649 43.6801 18.1935 43.6801C17.4222 43.6801 16.7969 43.0548 16.7969 42.2835Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M22.7559 42.2835C22.7559 41.5121 23.3812 40.8868 24.1525 40.8868C24.9239 40.8868 25.5492 41.5121 25.5492 42.2835C25.5492 43.0548 24.9239 43.6801 24.1525 43.6801C23.3812 43.6801 22.7559 43.0548 22.7559 42.2835Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M28.7148 42.2835C28.7148 41.5121 29.3401 40.8868 30.1115 40.8868C30.8828 40.8868 31.5082 41.5121 31.5082 42.2835C31.5082 43.0548 30.8828 43.6801 30.1115 43.6801C29.3401 43.6801 28.7148 43.0548 28.7148 42.2835Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M34.6738 42.2835C34.6738 41.5121 35.2991 40.8868 36.0705 40.8868C36.8418 40.8868 37.4671 41.5121 37.4671 42.2835C37.4671 43.0548 36.8418 43.6801 36.0705 43.6801C35.2991 43.6801 34.6738 43.0548 34.6738 42.2835Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M40.6328 42.2835C40.6328 41.5121 41.2581 40.8868 42.0295 40.8868C42.8008 40.8868 43.4261 41.5121 43.4261 42.2835C43.4261 43.0548 42.8008 43.6801 42.0295 43.6801C41.2581 43.6801 40.6328 43.0548 40.6328 42.2835Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M46.5918 42.2835C46.5918 41.5121 47.2171 40.8868 47.9885 40.8868C48.7598 40.8868 49.3851 41.5121 49.3851 42.2835C49.3851 43.0548 48.7598 43.6801 47.9885 43.6801C47.2171 43.6801 46.5918 43.0548 46.5918 42.2835Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M52.5508 42.2835C52.5508 41.5121 53.1761 40.8868 53.9474 40.8868C54.7188 40.8868 55.3441 41.5121 55.3441 42.2835C55.3441 43.0548 54.7188 43.6801 53.9474 43.6801C53.1761 43.6801 52.5508 43.0548 52.5508 42.2835Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M4.97266 48.2426C4.97266 47.5226 5.55627 46.939 6.2762 46.939C6.99613 46.939 7.57974 47.5226 7.57974 48.2426C7.57974 48.9625 6.99613 49.5461 6.2762 49.5461C5.55627 49.5461 4.97266 48.9625 4.97266 48.2426Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M10.9316 48.2426C10.9316 47.5226 11.5153 46.939 12.2352 46.939C12.9551 46.939 13.5387 47.5226 13.5387 48.2426C13.5387 48.9625 12.9551 49.5461 12.2352 49.5461C11.5153 49.5461 10.9316 48.9625 10.9316 48.2426Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M16.8906 48.2426C16.8906 47.5226 17.4742 46.939 18.1942 46.939C18.9141 46.939 19.4977 47.5226 19.4977 48.2426C19.4977 48.9625 18.9141 49.5461 18.1942 49.5461C17.4742 49.5461 16.8906 48.9625 16.8906 48.2426Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M22.8496 48.2426C22.8496 47.5226 23.4332 46.939 24.1532 46.939C24.8731 46.939 25.4567 47.5226 25.4567 48.2426C25.4567 48.9625 24.8731 49.5461 24.1532 49.5461C23.4332 49.5461 22.8496 48.9625 22.8496 48.2426Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M28.8086 48.2426C28.8086 47.5226 29.3922 46.939 30.1121 46.939C30.8321 46.939 31.4157 47.5226 31.4157 48.2426C31.4157 48.9625 30.8321 49.5461 30.1121 49.5461C29.3922 49.5461 28.8086 48.9625 28.8086 48.2426Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M34.7676 48.2426C34.7676 47.5226 35.3512 46.939 36.0711 46.939C36.791 46.939 37.3747 47.5226 37.3747 48.2426C37.3747 48.9625 36.791 49.5461 36.0711 49.5461C35.3512 49.5461 34.7676 48.9625 34.7676 48.2426Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M40.7266 48.2426C40.7266 47.5226 41.3102 46.939 42.0301 46.939C42.75 46.939 43.3337 47.5226 43.3337 48.2426C43.3337 48.9625 42.75 49.5461 42.0301 49.5461C41.3102 49.5461 40.7266 48.9625 40.7266 48.2426Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M46.6855 48.2426C46.6855 47.5226 47.2692 46.939 47.9891 46.939C48.709 46.939 49.2926 47.5226 49.2926 48.2426C49.2926 48.9625 48.709 49.5461 47.9891 49.5461C47.2692 49.5461 46.6855 48.9625 46.6855 48.2426Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M52.6445 48.2426C52.6445 47.5226 53.2281 46.939 53.9481 46.939C54.668 46.939 55.2516 47.5226 55.2516 48.2426C55.2516 48.9625 54.668 49.5461 53.9481 49.5461C53.2281 49.5461 52.6445 48.9625 52.6445 48.2426Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M5.06445 54.2016C5.06445 53.5331 5.60638 52.9912 6.27489 52.9912C6.94339 52.9912 7.48532 53.5331 7.48532 54.2016C7.48532 54.8701 6.94339 55.4121 6.27489 55.4121C5.60638 55.4121 5.06445 54.8701 5.06445 54.2016Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M11.0234 54.2016C11.0234 53.5331 11.5654 52.9912 12.2339 52.9912C12.9024 52.9912 13.4443 53.5331 13.4443 54.2016C13.4443 54.8701 12.9024 55.4121 12.2339 55.4121C11.5654 55.4121 11.0234 54.8701 11.0234 54.2016Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M16.9824 54.2016C16.9824 53.5331 17.5244 52.9912 18.1929 52.9912C18.8614 52.9912 19.4033 53.5331 19.4033 54.2016C19.4033 54.8701 18.8614 55.4121 18.1929 55.4121C17.5244 55.4121 16.9824 54.8701 16.9824 54.2016Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M22.9414 54.2016C22.9414 53.5331 23.4833 52.9912 24.1518 52.9912C24.8203 52.9912 25.3623 53.5331 25.3623 54.2016C25.3623 54.8701 24.8203 55.4121 24.1518 55.4121C23.4833 55.4121 22.9414 54.8701 22.9414 54.2016Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M28.9023 54.2016C28.9023 53.5331 29.4443 52.9912 30.1128 52.9912C30.7813 52.9912 31.3232 53.5331 31.3232 54.2016C31.3232 54.8701 30.7813 55.4121 30.1128 55.4121C29.4443 55.4121 28.9023 54.8701 28.9023 54.2016Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M34.8613 54.2016C34.8613 53.5331 35.4033 52.9912 36.0718 52.9912C36.7403 52.9912 37.2822 53.5331 37.2822 54.2016C37.2822 54.8701 36.7403 55.4121 36.0718 55.4121C35.4033 55.4121 34.8613 54.8701 34.8613 54.2016Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M40.8203 54.2016C40.8203 53.5331 41.3622 52.9912 42.0307 52.9912C42.6993 52.9912 43.2412 53.5331 43.2412 54.2016C43.2412 54.8701 42.6993 55.4121 42.0307 55.4121C41.3622 55.4121 40.8203 54.8701 40.8203 54.2016Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M46.7793 54.2016C46.7793 53.5331 47.3212 52.9912 47.9897 52.9912C48.6582 52.9912 49.2002 53.5331 49.2002 54.2016C49.2002 54.8701 48.6582 55.4121 47.9897 55.4121C47.3212 55.4121 46.7793 54.8701 46.7793 54.2016Z\"\n              fill=\"#231F20\"\n            />\n            <path\n              d=\"M52.7383 54.2016C52.7383 53.5331 53.2802 52.9912 53.9487 52.9912C54.6172 52.9912 55.1591 53.5331 55.1591 54.2016C55.1591 54.8701 54.6172 55.4121 53.9487 55.4121C53.2802 55.4121 52.7383 54.8701 52.7383 54.2016Z\"\n              fill=\"#231F20\"\n            />\n          </svg>\n        </button>\n        <button\n          className=\"pattern-button\"\n          onClick={() => {\n            projectDispatch({\n              type: \"SET_PATTERN_TYPE\",\n              payload: \"solid\",\n            });\n          }}\n        >\n          <svg\n            class={\n              isPatternSelected(\"solid\")\n                ? \"pattern-icon-selected\"\n                : \"pattern-icon\"\n            }\n            width=\"52\"\n            height=\"52\"\n            viewBox=\"0 0 60 60\"\n            fill=\"#fff8f5\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <rect\n              class=\"pattern-icon\"\n              x=\"1\"\n              y=\"1\"\n              width=\"58\"\n              height=\"58\"\n              rx=\"2\"\n              stroke=\"#8A124D\"\n              stroke-width=\"2\"\n            />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PatternTool;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { useProjectContext } from \"../Context/ProjectContext\";\n\nfunction ColorPicker({ colorPickerType }) {\n  const [projectState, projectDispatch] = useProjectContext();\n\n  const isPatternColorSelected = (color) => {\n    if (colorPickerType === \"SET_PATTERN_COLOR\") {\n      return projectState.patternColor === color;\n    }\n    if (colorPickerType === \"SET_BACKGROUND_COLOR\") {\n      return projectState.backgroundColor === color;\n    }\n  };\n\n  return (\n    <div className=\"color-button-block\">\n      <button\n        className={classNames(\n          \"lively-lavender\",\n          isPatternColorSelected(\"#F0E4EB\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Lively Lavender\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#F0E4EB\",\n          });\n        }}\n      >\n        {/* Lively Lavendar */}\n      </button>\n      <button\n        className={classNames(\n          \"brash-burgundy\",\n          isPatternColorSelected(\"#8D134D\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Brash Burgundy\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#8D134D\",\n          });\n        }}\n      >\n        {/* Brash Burgundy */}\n      </button>\n      <button\n        className={classNames(\n          \"black-raspberry\",\n          isPatternColorSelected(\"#341225\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Black Raspberry\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#341225\",\n          });\n        }}\n      >\n        {/* Black Raspberry */}\n      </button>\n      <button\n        className={classNames(\n          \"cold-indigo\",\n          isPatternColorSelected(\"#96BCBC\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Cold Indigo\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#96BCBC\",\n          });\n        }}\n      >\n        {/* Cold Indigo */}\n      </button>\n      <button\n        className={classNames(\n          \"medium-indigo\",\n          isPatternColorSelected(\"#0A2C49\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Medium Indigo\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#0A2C49\",\n          });\n        }}\n      >\n        {/* Medium Indigo */}\n      </button>\n      <button\n        className={classNames(\n          \"dark-indigo\",\n          isPatternColorSelected(\"#001129\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Dark Indigo\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#001129\",\n          });\n        }}\n      >\n        {/* Dark Indigo */}\n      </button>\n      <button\n        className={classNames(\n          \"website-white\",\n          isPatternColorSelected(\"#fbfbf5\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Website White\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#fbfbf5\",\n          });\n        }}\n      >\n        {/* Website White */}\n      </button>\n      <button\n        className={classNames(\n          \"giddy-green\",\n          isPatternColorSelected(\"#E4F2E4\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Giddy Green\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#E4F2E4\",\n          });\n        }}\n      >\n        {/* Giddy Green */}\n      </button>\n      <button\n        className={classNames(\n          \"growing-green\",\n          isPatternColorSelected(\"#80998C\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Growing Green\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#80998C\",\n          });\n        }}\n      >\n        {/* Growing Green */}\n      </button>\n      <button\n        className={classNames(\n          \"graceful-olive\",\n          isPatternColorSelected(\"#6F7347\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Graceful Olive\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#6F7347\",\n          });\n        }}\n      >\n        {/* Graceful Olive */}\n      </button>\n      <button\n        className={classNames(\n          \"forest-green\",\n          isPatternColorSelected(\"#2D3F23\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Forest Green\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#2D3F23\",\n          });\n        }}\n      >\n        {/* Forest Green */}\n      </button>\n      <button\n        className={classNames(\n          \"youthful-yellow\",\n          isPatternColorSelected(\"#fbef4f\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Youthful Yellow\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#fbef4f\",\n          });\n        }}\n      >\n        {/* Youthful Yellow */}\n      </button>\n      <button\n        className={classNames(\n          \"yearning-yellow\",\n          isPatternColorSelected(\"#fedc34\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Yearning Yellow\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#fedc34\",\n          });\n        }}\n      >\n        {/* Yearning Yellow */}\n      </button>\n      <button\n        className={classNames(\n          \"mature-yellow\",\n          isPatternColorSelected(\"#fdbe14\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Mature Yellow\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#fdbe14\",\n          });\n        }}\n      >\n        {/* Mature Yellow */}\n      </button>\n      <button\n        className={classNames(\n          \"original-ochre\",\n          isPatternColorSelected(\"#D3AD44\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Original Ochre\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#D3AD44\",\n          });\n        }}\n      >\n        {/* Original Ochre */}\n      </button>\n      <button\n        className={classNames(\n          \"talented-tan\",\n          isPatternColorSelected(\"#ae8035\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Talented Tan\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#ae8035\",\n          });\n        }}\n      >\n        {/* Talented Tan */}\n      </button>\n      <button\n        className={classNames(\n          \"balanced-brown\",\n          isPatternColorSelected(\"#664516\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Balanced Brown\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#664516\",\n          });\n        }}\n      >\n        {/* Balanced Brown */}\n      </button>\n      <button\n        className={classNames(\n          \"playful-peach\",\n          isPatternColorSelected(\"#edae9f\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Playful Peach\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#edae9f\",\n          });\n        }}\n      >\n        {/* Playful Peach */}\n      </button>\n      <button\n        className={classNames(\n          \"rebellious-red\",\n          isPatternColorSelected(\"#f06553\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Rebellious Red\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#f06553\",\n          });\n        }}\n      >\n        {/* Rebellious Red */}\n      </button>\n      <button\n        className={classNames(\n          \"ripened-red\",\n          isPatternColorSelected(\"#962f1e\")\n            ? \"color-button-selected\"\n            : \"color-button\"\n        )}\n        title=\"Ripened Red\"\n        onClick={() => {\n          projectDispatch({\n            type: colorPickerType,\n            payload: \"#962f1e\",\n          });\n        }}\n      >\n        {/* Ripened Red */}\n      </button>\n    </div>\n  );\n}\n\nexport default ColorPicker;\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { useProjectContext } from \"../../Context/ProjectContext\";\nimport ColorPicker from \"../ColorPicker\";\n\nconst PatternColorTool = () => {\n  const [projectState, projectDispatch] = useProjectContext();\n\n  // const isPatternColorSelected = (color) => {\n  //   return projectState.patternColor === color;\n  // };\n\n  return (\n    <div className=\"Drawing-tools\">\n      <div className=\"tool-name\">Pattern Color</div>\n      <ColorPicker colorPickerType=\"SET_PATTERN_COLOR\" />\n    </div>\n  );\n};\n\nexport default PatternColorTool;\n","import React from \"react\";\nimport { useProjectContext } from \"../../Context/ProjectContext\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Input from \"@material-ui/core/Input\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { CenterFocusStrong } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 232,\n  },\n  input: {\n    width: 48,\n    fontFamily: \"Apercu Mono Pro\",\n    color: \"#8A124D\",\n    background: \"white\",\n    border: \"1px solid\",\n    borderRadius: \"3px\",\n    paddingLeft: \"12px\",\n  },\n});\n\nconst marks = [\n  {\n    value: 1,\n  },\n  {\n    value: 100,\n  },\n];\n\nconst iOSBoxShadow =\n  \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)\";\n\nconst SpacingSlider = withStyles({\n  root: {\n    color: \"#8A124D\",\n    height: 2,\n    padding: \"15px 0\",\n  },\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: \"#8A124D\",\n    // boxShadow: iOSBoxShadow,\n    marginTop: -8,\n    marginLeft: -8,\n    \"&:focus, &:hover, &$active\": {\n      boxShadow:\n        \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)\",\n      // Reset on touch devices, it doesn't add specificity\n      \"@media (hover: none)\": {\n        boxShadow: iOSBoxShadow,\n      },\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50% + 12px)\",\n    top: -22,\n    \"& *\": {\n      background: \"transparent\",\n      color: \"#8A124D\",\n    },\n  },\n  track: {\n    height: 2,\n  },\n  rail: {\n    height: 2,\n    opacity: 0.5,\n    backgroundColor: \"#8A124D\",\n  },\n  mark: {\n    backgroundColor: \"#8A124D\",\n    height: 12,\n    width: 2,\n    marginTop: -5,\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: \"currentColor\",\n  },\n})(Slider);\n\nconst SpacingTool = () => {\n  const [projectState, projectDispatch] = useProjectContext();\n  const classes = useStyles();\n\n  const handleSliderChange = (event, newValue) => {\n    dispatchValue(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    dispatchValue(Math.abs(event.target.value));\n  };\n\n  const dispatchValue = (newValue) => {\n    projectDispatch({\n      type: \"SET_SPACING_VALUE\",\n      payload: newValue,\n    });\n  };\n\n  return (\n    <div className=\"Drawing-tools\">\n      <div className=\"tool-name\">Spacing</div>\n      <div className={classes.root}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs>\n            <SpacingSlider\n              value={projectState.spacingValue}\n              onChange={handleSliderChange}\n              aria-labelledby=\"input-slider\"\n              marks={marks}\n              step={1}\n              min={1}\n              max={100}\n            />\n          </Grid>\n          <Grid item>\n            <Input\n              className={classes.input}\n              value={projectState.spacingValue}\n              margin=\"dense\"\n              onChange={handleInputChange}\n              inputProps={{\n                step: 10,\n                min: 1,\n                max: 100,\n                type: \"number\",\n                \"aria-labelledby\": \"input-slider\",\n              }}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default SpacingTool;\n","import React from \"react\";\nimport { useProjectContext } from \"../../Context/ProjectContext\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Input from \"@material-ui/core/Input\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { CenterFocusStrong } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 232,\n  },\n  input: {\n    width: 48,\n    fontFamily: \"Apercu Mono Pro\",\n    color: \"#8A124D\",\n    background: \"white\",\n    border: \"1px solid\",\n    borderRadius: \"3px\",\n    paddingLeft: \"12px\",\n  },\n});\n\nconst marks = [\n  {\n    value: 1,\n  },\n  {\n    value: 20,\n  },\n];\n\nconst iOSBoxShadow =\n  \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)\";\n\nconst SizeSlider = withStyles({\n  root: {\n    color: \"#8A124D\",\n    height: 2,\n    padding: \"15px 0\",\n  },\n  thumb: {\n    height: 18,\n    width: 18,\n    backgroundColor: \"#8A124D\",\n    // boxShadow: iOSBoxShadow,\n    marginTop: -8,\n    marginLeft: -8,\n    \"&:focus, &:hover, &$active\": {\n      boxShadow:\n        \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)\",\n      // Reset on touch devices, it doesn't add specificity\n      \"@media (hover: none)\": {\n        boxShadow: iOSBoxShadow,\n      },\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50% + 12px)\",\n    top: -22,\n    \"& *\": {\n      background: \"transparent\",\n      color: \"#8A124D\",\n    },\n  },\n  track: {\n    height: 2,\n  },\n  rail: {\n    height: 2,\n    opacity: 0.5,\n    backgroundColor: \"#8A124D\",\n  },\n  mark: {\n    backgroundColor: \"#8A124D\",\n    height: 12,\n    width: 2,\n    marginTop: -5,\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: \"currentColor\",\n  },\n})(Slider);\n\nconst SizeTool = () => {\n  const [projectState, projectDispatch] = useProjectContext();\n  const classes = useStyles();\n\n  const handleSliderChange = (event, newValue) => {\n    dispatchValue(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    dispatchValue(Math.abs(event.target.value));\n  };\n\n  const dispatchValue = (newValue) => {\n    projectDispatch({\n      type: \"SET_SIZE_VALUE\",\n      payload: newValue,\n    });\n  };\n\n  return (\n    <div className=\"Drawing-tools\">\n      <div className=\"tool-name\">Size</div>\n      <div className={classes.root}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs>\n            <SizeSlider\n              value={projectState.sizeValue}\n              onChange={handleSliderChange}\n              aria-labelledby=\"input-slider\"\n              marks={marks}\n              step={1}\n              min={1}\n              max={20}\n            />\n          </Grid>\n          <Grid item>\n            <Input\n              className={classes.input}\n              value={projectState.sizeValue}\n              margin=\"dense\"\n              onChange={handleInputChange}\n              inputProps={{\n                step: 1,\n                min: 1,\n                max: 20,\n                type: \"number\",\n                \"aria-labelledby\": \"input-slider\",\n              }}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default SizeTool;\n","import React from 'react'\nimport ShapeTool from './Drawing Tools/ShapeTool'\nimport PatternTool from './Drawing Tools/PatternTool'\nimport PatternColorTool from './Drawing Tools/PatternColorTool'\nimport SpacingTool from './Drawing Tools/SpacingTool'\nimport SizeTool from './Drawing Tools/SizeTool'\n\nconst DrawingTools = () => {\n    return (\n        <div className=\"Toolbar\">\n            <ShapeTool />\n            <PatternTool />\n            <PatternColorTool />\n            <SpacingTool />\n            <SizeTool />\n        </div>\n    )\n}\n\nexport default DrawingTools\n","import React, { useState } from \"react\";\n// import Paper,{Path} from './lib/paperjs/dist/paper-full.js';\nimport Paper, {\n  Path,\n  Point,\n  PaperScope,\n  paper,\n  project,\n  Tool,\n  activeLayer,\n} from \"paper\";\nimport { useProjectContext } from \"../Context/ProjectContext\";\nimport { Layer } from \"paper/dist/paper-core\";\nlet tool = new Tool();\n\nconst Canvas = (props) => {\n  const [projectState, projectDispatch] = useProjectContext();\n\n  React.useEffect(() => {\n    tool.onMouseDrag = projectState.drawShape;\n  }, [projectState.drawShape]);\n\n  //Clears canvas on mouse click\n  const handleMouseDown = (event) => {\n    // project.clear();\n    let oldLayer = new paper.Layer();\n    oldLayer.insertBelow(activeLayer);\n  };\n\n  return (\n    <canvas\n      id=\"paper-canvas\"\n      width=\"100%\"\n      height=\"100%\"\n      onMouseDown={handleMouseDown}\n      data-paper-resize\n    />\n  );\n};\n\nexport default Canvas;\n","import React, { useEffect, useState } from \"react\";\nimport Canvas from \"./Canvas\";\nimport Paper, { project, paper, Tool, View, activeLayer } from \"paper\";\nimport { useProjectContext } from \"../Context/ProjectContext\";\nimport ColorPicker from \"./ColorPicker\";\nimport { Layer } from \"paper/dist/paper-core\";\n\nconst CanvasContainer = () => {\n  const [open, setOpen] = useState(false);\n\n  const [projectState, projectDispatch] = useProjectContext();\n\n  useEffect(() => {\n    Paper.setup(\"paper-canvas\");\n  }, []);\n\n  const handleExportSVG = (fileName) => {\n    if (!fileName) {\n      fileName = \"paperjs_example.svg\";\n    }\n\n    var url =\n      \"data:image/svg+xml;utf8,\" +\n      encodeURIComponent(\n        project.exportSVG({ asString: true, bounds: \"content\" })\n      );\n\n    var link = document.createElement(\"a\");\n    link.download = fileName;\n    link.href = url;\n    link.click();\n  };\n\n  // const removeLastLayer = () => {\n  //   var lastLayer = project.activeLayer;\n  //   // lastLayer.activate();\n  //   lastLayer.remove();\n  // };\n\n  // const addLastLayer = (lastLayer) => {\n  //   project.layers.push(lastLayer);\n  // };\n\n  return (\n    <div className=\"canvas-container\">\n      <div className=\"canvas-history-button-group\">\n        <button\n          type=\"button\"\n          title=\"Undo\"\n          className=\"canvas-history-button\"\n          onClick={() => project.activeLayer.remove()}\n        >\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"#8B134D\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"M12.5 8C9.85 8 7.45 8.99 5.6 10.6L2 7V16H11L7.38 12.38C8.77 11.22 10.54 10.5 12.5 10.5C16.04 10.5 19.05 12.81 20.1 16L22.47 15.22C21.08 11.03 17.15 8 12.5 8Z\" />\n          </svg>\n        </button>\n        {/* <button\n          type=\"button\"\n          className=\"canvas-history-button\"\n          onClick={addLastLayer}\n        >\n          Redo\n        </button> */}\n        <button\n          type=\"button\"\n          className=\"canvas-history-button\"\n          title=\"Clear\"\n          onClick={() => project.clear()}\n        >\n          Clear\n        </button>\n        <h3>Click and drag in the canvas to draw</h3>\n      </div>\n      <div\n        className=\"canvas-box\"\n        style={{ backgroundColor: projectState.backgroundColor }}\n      >\n        <Canvas drawShape={projectState.drawShape} />\n      </div>\n      {open && (\n        <div className=\"color-picker-menu\">\n          <ColorPicker colorPickerType=\"SET_BACKGROUND_COLOR\" />\n        </div>\n      )}\n      <div className=\"canvas-bottom-button-group\">\n        <div className=\"background-color-button-group\">\n          <button\n            type=\"button\"\n            className=\"background-color-button\"\n            style={{ backgroundColor: projectState.backgroundColor }}\n            onClick={() => setOpen(!open)}\n          ></button>\n          <p className=\"background-color-name\">Background Color</p>\n        </div>\n        <button\n          className=\"export-button\"\n          onClick={() => handleExportSVG(\"pattern\")}\n        >\n          Export SVG\n        </button>\n      </div>\n      {open && (\n        <div>\n          <button\n            className=\"menu_closer\"\n            style={{\n              height: \"98vh\",\n              width: \"98vw\",\n              left: \"0\",\n              top: \"0\",\n              position: \"absolute\",\n              opacity: \"0\",\n              zIndex: \"1\",\n              border: \"0\",\n              padding: \"0\",\n            }}\n            onClick={() => setOpen(!open)}\n          ></button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CanvasContainer;\n","import \"./App.css\";\nimport Header from \"./Components/Header\";\nimport DrawingTools from \"./Components/DrawingTools\";\nimport CanvasContainer from \"./Components/CanvasContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"body-container\">\n        <DrawingTools />\n        <CanvasContainer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ProjectProvider} from './Context/ProjectContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ProjectProvider>\n      <App />\n    </ProjectProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}